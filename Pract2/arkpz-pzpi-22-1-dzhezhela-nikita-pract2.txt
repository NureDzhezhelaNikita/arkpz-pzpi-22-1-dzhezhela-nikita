Харківський університет радіоелектроніки
Факультет комп'ютерних наук
Кафедра програмної інженерії










ЗВІТ
до практичного заняття з дисципліни
"Аналіз та рефакторинг коду"
на тему "Refactoring Methods"








Виконав ст. гр ПЗПІ-22-1
Джежела Нікіта Русланович


Перевірив
доцент кафедри ПІ
Лещинський Володимир Олександрович












Харків 2024
1 МЕТА
Дослідити методи рефакторингу з книги Мартіна Р. “Чистий код: створення і рефакторинг за допомогою AGILE”. Обрати 3 методи та визначити:
1. За яких умов доцільне їх використання;
2. Основна мета та результат застосування;
3. Порівняльні приклади;
4. Найкращі практики стосовно використання цих методів.
На основі зібраних даних, підготувати доповідь та презентацію.
2 ХІД РОБОТИ
У якості досліджуваних методів були обрані методи, що широко використовуються з ООП, а саме:
* Remove Assignments to Parameters
* Pull Up Field
* Replace Conditional with Polymorphism
Розглянемо кожен з методів більш детально:
Remove Assignments to Parameters - прибрати присвоювання до параметрів - цей метод рефакторингу спрямований на покращення читабельності коду та запобігання помилкам шляхом уникнення прямої зміни параметрів функції. Замість того, щоб змінювати параметри в межах функції, треба призначати їхні значення новим змінним і працювати з ними.
Застосування цього методу доцільне за умови відсутності обмежень з точки зору розміру пам’яті. Це пояснює код і запобігає неочікуваним змінам аргументів поза функцією.
  

Рисунок 1 – Код до рефакторингу
  

Рисунок 2 – Код після рефакторингу
Pull Up Field - перенесення властивості - передбачає централізацію загальних властивостей, переміщуючи їх із підкласів у батьківський клас, коли вони дублюються в кількох підкласах. 
Застосування цього методу доцільне за умови впевненості, що властивості, які необхідно винести, справді належать до батьківського класу і не є специфічними для кожного з окремих підкласів. Це сприяє повторному використанню коду і спрощує підтримку, зберігаючи спільні атрибути в одному місці.
  

Рисунок 3 – Код до рефакторингу
  

Рисунок 4 – Код після рефакторингу
Replace Conditional with Polymorphism - видалити умовну логіку за допомогою поліморфізму. Замість перевірки типів або умов у методі для визначення поведінки, треба створити підкласи, де кожен підклас реалізує свою певну поведінку.
Застосування цього методу доцільне майже завжди, окрім ситуацій, де необхідні оптимізації. Завдяки такому підходу код зберігається чистим, адаптованим і легшим для розширення.
  

Рисунок 5 – Код до рефакторингу
  

Рисунок 6 – Код після рефакторингу
ВИСНОВКИ
Дослідив методи рефакторингу з книги Мартіна Р. Детально проаналізував три методи: Remove Assignments to Parameters, Pull Up Field, Replace Conditional with Polymorphism. Підготував доповідь та презентацію.


________________


ДОДАТОК А
Слайди презентації.